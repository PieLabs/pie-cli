const marked = require('marked');
const TerminalRenderer = require('marked-terminal');
import Question from '../question';
import { resolve } from 'path';
import { buildLogger } from '../log-factory';
import { BuildOpts as ClientBuildOpts } from '../question/client';
import { BuildOpts as ControllersBuildOpts } from '../question/controllers'

let logger = buildLogger();

export function match(args) {
  return args._.indexOf('clean-question') !== -1;
}

export let summary = 'clean-question - remove files generated by the `pack-question` command';

marked.setOptions({
  renderer: new TerminalRenderer()
});

export let usage = marked(`
# clean-question 
-----------------

Clean the cruft generated by pack-question 

### Examples 

\`\`\`shell 
pie-cli clean-question --dir ../path/to/dir

`);

export function run(args) {
  logger.debug('[run] args: ', args);
  let dir = resolve(args.dir || process.cwd());
  let clientOpts = ClientBuildOpts.build(args);
  let controllerOpts = ControllersBuildOpts.build(args);

  //Note: we don't need an app when cleaning
  let emptyApp = {
    frameworkSupport: () => []
  };

  //Note: we don't need framework support for a clean
  let noExternalSupport = [];
  let question = new Question(dir, clientOpts, controllerOpts, noExternalSupport, emptyApp);
  return question.clean(dir, args)
    .then(() => "clean complete")
}